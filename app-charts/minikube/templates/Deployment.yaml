{{- range $key, $value := .Values.myapps -}}
{{ if not .disabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ default $.Values.global.metadata.namespace .namespace }}
  name: {{ $key }}
  labels:
    service: {{ $key }}
{{- if $value.metalabels }}
{{- range $value.metalabels }}
    {{ . }}
{{- end }}
{{- end }}
spec:
{{- if .replicaCount }}
  replicas: {{ .replicaCount }}
{{- end }}
  selector:
    matchLabels:
      app: {{ $key }}
  template:
    metadata:
      annotations:
        proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
        sidecar.istio.io/proxyCPU: 10m
        sidecar.istio.io/proxyCPULimit: '2'
        sidecar.istio.io/proxyMemory: 10Mi
        sidecar.istio.io/proxyMemoryLimit: 512Mi
      {{- with .podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ $key }}
        istio.io/rev: "stable"
        {{- with .podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ default $key .serviceAccountName }}
      containers:
        - env:
            - name: APP_ENV
              value: {{ $.Values.global.env }}
            - name: VAULT_ROLE
              value: {{ default $key .vault.role }}
            - name: VAULT_SERVER
              value: https://vault.vault-system.svc.cluster.local:8200
            - name: SERVICE_PATH
              value: {{ .vault.path }}
            - name: VAULT_VERIFY_SSL
              value: {{ default "false" .vault.tls }}
          image: {{ .image.repository }}:{{ .buildid }}
          imagePullPolicy: {{ default "IfNotPresent" .image.pullPolicy }}
          name: {{ .image.name }}
          ports:
            - containerPort: {{ default $.Values.global.spec.port .port }}
              name: http
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }} 
          {{- end }}
          {{- with .volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .initContainer }}
      initContainers:
        - env:
            - name: APP_ENV
              value: {{ $.Values.global.env }}
            - name: VAULT_ROLE
              value: {{ default $key .initContainer.vault.role }}
            - name: VAULT_SERVER
              value: https://vault.vault-system.svc.cluster.local:8200
            - name: SERVICE_PATH
              value: {{ .initContainer.vault.path }}
            - name: VAULT_VERIFY_SSL
              value: {{ default "false" .initContainer.vault.tls }}
          image: {{ .initContainer.image.repository }}:{{ .buildid }}
          name: {{ .initContainer.name }}
          {{- with .initContainer.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .initContainer.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .initContainer.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
---
{{- end }}
{{- end }}
