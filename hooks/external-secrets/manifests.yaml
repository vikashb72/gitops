apiVersion: batch/v1
kind: Job
metadata:
  # use this to run once
  # name: post-install
  # use this to run with every update
  generateName: post-install
  namespace: argocd
  annotations:
    argocd.argoproj.io/hook: PreSync
    #argocd.argoproj.io/hook: PostSync
    # argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      #serviceAccountName: argocd-internal-deployer
      serviceAccountName: argocd-application-controller
      containers:
        - name: sleep
          imagePullPolicy: IfNotPresent
          image: alpine:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              id
              apk add --no-cache --update curl jq
              echo "PostSync"
              sleep 1
              curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && \
              chmod +x kubectl && mv kubectl /usr/local/bin/kubectl
              toke=$(curl -s -H  "X-Vault-Token: $VAULT_TOKEN" -X GET $EXTERNAL_VAULT_ADDR/v1/kv/data/minikube/vault/transit/seal | jq -r '.data.data.token')
              kubectl create namespace external-secrets || true
              kubectl -n external-secrets \
                  create secret generic vault-token \
                  --from-literal=token="${token}"
          env:
            - name: VAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: argo-hook-vault-token
                  key: token
            - name: VAULT_ADDR
              valueFrom:
                secretKeyRef:
                  name: argo-hook-vault-addr
                  key: token
      restartPolicy: Never
  backoffLimit: 0
