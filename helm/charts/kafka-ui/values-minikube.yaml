schema:
  env: minikube

kafka-ui:
  replicaCount: 1
  
  serviceAccount:
    create: true
  
  existingConfigMap: ""
  yamlApplicationConfig:
    kafka:
      clusters:
        - name: kafka-cluster
          #bootstrapServers: kafka-cluster-kafka-bootstrap.kafka-system.svc.cluster.local:9093
          #bootstrapServers: kafka-cluster-kafka-bootstrap.kafka-system.svc.cluster.local:9092
          bootstrapServers: kafka-cluster-kafka-brokers.kafka-system.svc.cluster.local:9092
      # auth:
      #   type: disabled
      management:
        health:
          ldap:
            enabled: false
  yamlApplicationConfigConfigMap:
    {}
    # keyName: config.yml
    # name: configMapName
  existingSecret: ""
  #existingSecret: "kafka-user"
  envs:
    secret: {}
    config: {}
  
  probes:
    useHttpsScheme: true
  
  service:
    type: ClusterIP
    port: 80
    # loadBalancerIP: 10.11.12.13
  
  env:
    - name: KAFKA_CLUSTERS_0_NAME
      value: "kafka-cluster"
    - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
      value: "kafka-cluster-kafka-brokers.kafka-system:9092"
      #value: "kafka-cluster-kafka-bootstrap.kafka-system:9092"
    - name: DYNAMIC_CONFIG_ENABLED
      value: 'true'
    - name: KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL
      value: SASL_PLAINTEXT
    #  #value: SSL
    #  #value: SASL_SSL
    - name: KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM
      value: SCRAM-SHA-512
    #- name: KAFKA_CLUSTERS_0_SSL_TRUSTSTORELOCATION
    #  value: /ssl/kafka/kafka.truststore.jks

  #  # KAFKA_CLUSTERS_0_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: '' 
  
  initContainers: {}
  
  #volumeMounts:
  #  - mountPath: /ssl/kafka/
  #    name: own-ca-bundle
  #    readOnly: true
  #
  #volumes:
  #  - name: own-ca-bundle
  #    configMap:
  #      name: own-ca-bundle
  #      defaultMode: 0644
  #      optional: false
  #      items:
  #        - key: bundle.jks
  #          path: kafka.truststore.jks
