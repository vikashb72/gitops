schema:
  env: minikube
  istioNamespace: istio-system

gateways:
  # httpbin (via app-gateway)
  httpbin-gateway:
    namespace: httpbin
    gateway:
      selector: app-gateway
    servers:
      - port:
          number: 443
          name: httpbin-https
          protocol: HTTPS
        hosts:
          - 'httpbin.minikube.where-ever.net'
      #- port:
      #    number: 80
      #    name: httpbin-http
      #    protocol: HTTP
      #  hosts:
      #    - 'httpbin.minikube.where-ever.net'
    VirtualServices:
      - name: httpbin-virtual-service
        namespace: httpbin
        hosts:
          - "httpbin.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /get
            - uri:
                prefix: /headers
            - uri:
                prefix: /delay
            - uri:
                prefix: /drip
            route:
              - destination:
                  port:
                    number: 8000
                  host: httpbin
  # echoserver (via app-gateway)
  echoserver-gateway:
    namespace: echoserver
    gateway:
      selector: app-gateway
    servers:
      - port:
          number: 443
          name: echoserver-https
          protocol: HTTPS
        hosts:
          - 'echoserver.minikube.where-ever.net'
    VirtualServices:
      - name: echoserver-virtual-service
        namespace: echoserver
        hosts:
          - "echoserver.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 80
                  host: echoserver
  # argocd (via infra-gateway)
  argocd-gateway:
    namespace: argocd
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: argocd-https
          protocol: HTTPS
        hosts:
          - 'argocd.minikube.where-ever.net'
    VirtualServices:
      - name: argocd-virtual-service
        namespace: argocd
        hosts:
          - "argocd.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 80
                  host: argocd-server
  # prometheus (via infra-gateway)
  prometheus-gateway:
    namespace: monitoring
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: prometheus-https
          protocol: HTTPS
        hosts:
          - 'prometheus.minikube.where-ever.net'
    VirtualServices:
      - name: prometheus-virtual-service
        namespace: monitoring
        hosts:
          - "prometheus.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 9090
                  host: kube-prometheus-stack-prometheus
  # authentik (via infra-gateway)
  authentik-gateway:
    namespace: authentik
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: authentik-https
          protocol: HTTPS
        hosts:
          - 'authentik.minikube.where-ever.net'
          - 'auth.minikube.where-ever.net'
    VirtualServices:
      - name: authentik-virtual-service
        namespace: authentik
        hosts:
          - "authentik.minikube.where-ever.net"
          - "auth.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 80
                  host: authentik
  # grafana (via infra-gateway)
  grafana-gateway:
    namespace: monitoring
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: grafana-https
          protocol: HTTPS
        hosts:
          - 'grafana.minikube.where-ever.net'
    VirtualServices:
      - name: grafana-virtual-service
        namespace: monitoring
        hosts:
          - "grafana.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 80
                  host: kube-prometheus-stack-grafana
  # alertmanager (via infra-gateway)
  alertmanager-gateway:
    namespace: monitoring
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: alertmanager-https
          protocol: HTTPS
        hosts:
          - 'alertmanager.minikube.where-ever.net'
    VirtualServices:
      - name: alertmanager-virtual-service
        namespace: monitoring
        hosts:
          - "alertmanager.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 9093
                  host: alertmanager-operated
  # loki (via infra-gateway)
  loki-gateway:
    namespace: loki-system
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: loki-https
          protocol: HTTPS
        hosts:
          - 'loki.minikube.where-ever.net'
    VirtualServices:
      - name: loki-virtual-service
        namespace: loki-system
        hosts:
          - "loki.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 80
                  host: loki-gateway
  # vault (via infra-gateway)
  vault-gateway:
    namespace: vault-system
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: vault-https
          protocol: HTTPS
        hosts:
          - 'vault.minikube.where-ever.net'
    VirtualServices:
      - name: vault-virtual-service
        namespace: vault-system
        hosts:
          - "vault.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 8200
                  host: vault-ui
  # goldilocks (via infra-gateway)
  goldilocks-gateway:
    namespace: goldilocks-system
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: goldilocks-https
          protocol: HTTPS
        hosts:
          - 'goldilocks.minikube.where-ever.net'
    VirtualServices:
      - name: goldilocks-virtual-service
        namespace: goldilocks-system
        hosts:
          - "goldilocks.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 80
                  host: goldilocks-dashboard
  # mailhog (via infra-gateway)
  mailhog-gateway:
    namespace: dev-tools
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: mailhog-https
          protocol: HTTPS
        hosts:
          - 'mailhog.minikube.where-ever.net'
    VirtualServices:
      - name: mailhog-virtual-service
        namespace: dev-tools
        hosts:
          - "mailhog.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 8025
                  host: mailhog
  # homepage (via infra-gateway)
  homepage-gateway:
    namespace: homepage
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: homepage-https
          protocol: HTTPS
        hosts:
          - 'homepage.minikube.where-ever.net'
    VirtualServices:
      - name: homepage-virtual-service
        namespace: homepage
        hosts:
          - "mailhog.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 3000
                  host: homepage
