schema:
  env: minikube
  istioNamespace: istio-system

gateways:
  # httpbin (via app-gateway)
  httpbin-gateway:
    gateway:
      selector: app-gateway
    servers:
      - port:
          number: 443
          name: httpbin-https
          protocol: HTTPS
        hosts:
          - 'httpbin.minikube.where-ever.net'
    VirtualServices:
      - name: httpbin-virtual-service
        CustomAuthorizationPolicy: true
        hosts:
          - "httpbin.minikube.where-ever.net"
        http:
          - match:
              - uri:
                  regex: ^\/[^\.]+.*
              - uri:
                  exact: /
            route:
              - destination:
                  host: httpbin.httpbin.svc.cluster.local
                  port:
                    number: 8000

  # echoserver (via app-gateway)
  echoserver-gateway:
    gateway:
      selector: app-gateway
    servers:
      - port:
          number: 443
          name: echoserver-https
          protocol: HTTPS
        hosts:
          - 'echoserver.minikube.where-ever.net'
    VirtualServices:
      - name: echoserver-virtual-service
        CustomAuthorizationPolicy: true
        hosts:
          - "echoserver.minikube.where-ever.net"
        http:
          - match:
              - uri:
                  regex: ^\/[^\.]+.*
              - uri:
                  prefix: /
            route:
              - destination:
                  host: echoserver.echoserver.svc.cluster.local
                  port:
                    number: 80
  # argocd (via infra-gateway)
  argocd-gateway:
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: argocd-https
          protocol: HTTPS
        hosts:
          - 'argocd.minikube.where-ever.net'
    VirtualServices:
      - name: argocd-virtual-service
        hosts:
          - "argocd.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 80
                  host: argocd-server.argocd.svc.cluster.local
  # prometheus (via infra-gateway)
  prometheus-gateway:
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: prometheus-https
          protocol: HTTPS
        hosts:
          - 'prometheus.minikube.where-ever.net'
    VirtualServices:
      - name: prometheus-virtual-service
        CustomAuthorizationPolicy: true
        hosts:
          - "prometheus.minikube.where-ever.net"
        http:
          - match:
              - uri:
                  regex: ^\/[^\.]+.*
              - uri:
                  prefix: /
            route:
              - destination:
                  port:
                    number: 9090
                  host: kube-prometheus-stack-prometheus.monitoring.svc.cluster.local
  # authentik (via infra-gateway)
  authentik-gateway:
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: authentik-https
          protocol: HTTPS
        hosts:
          - 'authentik.minikube.where-ever.net'
          - 'auth.minikube.where-ever.net'
    VirtualServices:
      - name: authentik-virtual-service
        hosts:
          - "authentik.minikube.where-ever.net"
          - "auth.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 80
                  host: authentik-server.authentik.svc.cluster.local
  # grafana (via infra-gateway)
  grafana-gateway:
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: grafana-https
          protocol: HTTPS
        hosts:
          - 'grafana.minikube.where-ever.net'
    VirtualServices:
      - name: grafana-virtual-service
        hosts:
          - "grafana.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 80
                  host: kube-prometheus-stack-grafana.monitoring.svc.cluster.local
  ## alertmanager (via infra-gateway)
  alertmanager-gateway:
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: alertmanager-https
          protocol: HTTPS
        hosts:
          - 'alertmanager.minikube.where-ever.net'
    VirtualServices:
      - name: alertmanager-virtual-service
        CustomAuthorizationPolicy: true
        hosts:
          - "alertmanager.minikube.where-ever.net"
        http:
          - match:
              - uri:
                  regex: ^\/[^\.]+.*
              - uri:
                  prefix: /
            route:
              - destination:
                  port:
                    number: 9093
                  host: alertmanager-operated.monitoring.svc.cluster.local
  ## loki (via infra-gateway)
  #loki-gateway:
  #  gateway:
  #    selector: infra-gateway
  #  servers:
  #    - port:
  #        number: 443
  #        name: loki-https
  #        protocol: HTTPS
  #      hosts:
  #        - 'loki.minikube.where-ever.net'
  #  VirtualServices:
  #    - name: loki-virtual-service
  #      hosts:
  #        - "loki.minikube.where-ever.net"
  #      http:
  #        - match:
  #          - uri:
  #              prefix: /
  #          route:
  #            - destination:
  #                port:
  #                  number: 80
  #                host: loki-gateway.loki-system.svc.cluster.local
  ## vault (via infra-gateway)
  vault-gateway:
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: vault-https
          protocol: HTTPS
          #tlsMode: PASSTHROUGH
        hosts:
          - 'vault-ui.minikube.where-ever.net'
    VirtualServices:
      - name: vault-virtual-service
        DestinationRule:
          host: vault-ui.vault-system.svc.cluster.local
          tls: true
        hosts:
          - "vault-ui.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 8200
                  host: vault-ui.vault-system.svc.cluster.local
  ## goldilocks (via infra-gateway)
  goldilocks-gateway:
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: goldilocks-https
          protocol: HTTPS
        hosts:
          - 'goldilocks.minikube.where-ever.net'
    VirtualServices:
      - name: goldilocks-virtual-service
        hosts:
          - "goldilocks.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 80
                  host: goldilocks-dashboard.goldilocks-system.svc.cluster.local
  ## mailhog (via infra-gateway)
  mailhog-gateway:
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: mailhog-https
          protocol: HTTPS
        hosts:
          - 'mailhog.minikube.where-ever.net'
    VirtualServices:
      - name: mailhog-virtual-service
        hosts:
          - "mailhog.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 8025
                  host: mailhog.dev-tools.svc.cluster.local
  # homepage (via infra-gateway)
  homepage-gateway:
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: homepage-https
          protocol: HTTPS
        hosts:
          - 'homepage.minikube.where-ever.net'
    VirtualServices:
      - name: homepage-virtual-service
        hosts:
          - "homepage.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 3000
                  host: homepage.homepage.svc.cluster.local
  # kafka-ui (via infra-gateway)
  kafka-ui-gateway:
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 443
          name: kafka-ui-https
          protocol: HTTPS
        hosts:
          - 'kafka-ui.minikube.where-ever.net'
    VirtualServices:
      - name: kafka-ui-virtual-service
        hosts:
          - "kafka-ui.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 80
                  host: kafka-ui.kafka-ui.svc.cluster.local
  # kafka-rest (via infra-gateway)
  kafka-rest-gateway:
    gateway:
      selector: infra-gateway
    servers:
      - port:
          number: 80
          name: kafka-rest-http
          protocol: HTTP
        hosts:
          - 'kafka-rest.minikube.where-ever.net'
        httpsRedirect: true
      - port:
          number: 443
          name: kafka-rest-https
          protocol: HTTPS
        hosts:
          - 'kafka-rest.minikube.where-ever.net'
    VirtualServices:
      - name: kafka-rest-virtual-service
        hosts:
          - "kafka-rest.minikube.where-ever.net"
        http:
          - match:
            - uri:
                prefix: /
            route:
              - destination:
                  port:
                    number: 8082
                  host: kafka-rest-service.kafka-rest.svc.cluster.local
