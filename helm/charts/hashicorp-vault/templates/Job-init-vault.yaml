apiVersion: batch/v1
kind: Job
metadata:
  name: vault-init
  namespace: argocd
  annotations:
    "helm.sh/hook": post-sync
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  serviceAccountName: argocd-application-controller
  template:
    spec:
      containers:
      - name: vault-init
        image: alpine:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            apk add --no-cache --update curl jq kubectl
            export VAULT_K8S_NAMESPACE={{ .Values.vault.global.namespace }}
            export VAULT_ADDR="https://vault-active.${VAULT_K8S_NAMESPACE}.svc.cluster.local:8200"
            kubectl -n ${VAULT_K8S_NAMESPACE} \
              wait --for=condition=Initialized pod/vault-0 --timeout=120s || \
            kubectl -n ${VAULT_K8S_NAMESPACE} \
              wait --for=condition=Initialized pod/vault-0 --timeout=120s
            VAULT_STATUS=$(kubectl -n ${VAULT_K8S_NAMESPACE} \
                exec vault-0 -- vault status -format=json \
                | jq -r '.initialized')
            if [[ ""$VAULT_STATUS" == "false" ]]; then
                echo "Clean Vault Install - starting initialization."
                INIT_RESULT=$(kubectl exec -n $VAULT_K8S_NAMESPACE vault-0 -- \
                    vault operator init -format=json)
                kubectl -n $VAULT_K8S_NAMESPACE create secret generic \
                    vault-operator-init \
                    --from-literal=init=${INIT_RESULT}
            fi
        #env:
        #  - name: VAULT_TOKEN
        #    valueFrom:
        #      secretKeyRef:
        #        name: raft-snapshot-token
        #        key: token
      restartPolicy: Never
  backoffLimit: 4
