schema:
  env: minikube

# Default values for kafka-rest.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Image Info
## ref: https://hub.docker.com/r/confluentinc/cp-kafka-rest
image:
  registry: docker.io
  repository: confluentinc/cp-kafka-rest
  # Overrides the image tag whose default is the chart appVersion.
  tag: "7.3.0"
  pullPolicy: IfNotPresent
imagePullSecrets:  []
nameOverride: ""
fullnameOverride: ""

## Service
service:
   type: ClusterIP
   #annotations:
   #  - 'metallb.universe.tf/address-pool: default'

## Kafka REST 
replicaCount: 1

## Kafka REST Configuration
## ref: https://docs.confluent.io/platform/current/kafka-rest/production-deployment/rest-proxy/config.html
heapOpts: -XX:MaxRAMPercentage=75.0 -XX:InitialRAMPercentage=50.0
port: 8082

## Kafka Cluster Configuration
kafka:
  ## If true, kafka was installed under the same umbrella
  enabled: false
  ## If outside or custom kafka a bootstrap server is required
  bootstrapServers: SSL://kafka-cluster-kafka-bootstrap.kafka-system:9093
  replicaCount: 3

## Kafka Broker Kerberos
## ref: https://docs.confluent.io/platform/current/kafka/authentication_sasl/authentication_sasl_gssapi.html#brokers
kerberos:
  enabled: false
  krb5Conf:
  keyTabSecret:
  serviceName:
  domain:

## Schema Registry Configuration
schema-registry:
  ## If true, schema-registry was installed under the same umbrella
  enabled: true
  ## If outside or custom a URL and port are required to connect. Remember to include the protocol http:// or https://
  url:

## Configure Liveness and Readiness Probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

## Configure Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
podSecurityContext:
  fsGroup: 1000

## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsUser: 1000
  runAsGroup: 1000
  capabilities:
    drop:
    - ALL

## Configure Resources for Containers
## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources:
  limits:
    cpu: 200m
    memory: 660Mi
  requests:
    cpu: 100m
    memory: 200Mi
  
