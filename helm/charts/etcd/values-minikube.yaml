schema:
  env: minikube
  hostname: etcd.minikube.where-ever.net
etcd:
  global:
    defaultStorageClass: "nfs-client"

  diagnosticMode:
    enabled: false
  image:
    debug: false

  ## Authentication parameters
  auth:
    rbac:
      create: false
      allowNoneAuthentication: true
      existingSecret: "etcd-secrets"
      existingSecretPasswordKey: "etcd-root-password"

    ## Authentication token
    token:
      enabled: false

    client:
      ## @param auth.client.secureTransport Switch to encrypt client-to-server communications using TLS certificates
      ##
      secureTransport: true
      useAutoTLS: false
      existingSecret: "etcd-client-tls"
      enableAuthentication: false
      certFilename: "tls.crt"
      certKeyFilename: "tls.key"
      caFilename: "ca.crt"

    ## TLS authentication for server-to-server communications
    peer:
      ## @param auth.peer.secureTransport Switch to encrypt server-to-server communications using TLS certificates
      ##
      secureTransport: true
      useAutoTLS: false
      existingSecret: "etcd-server-tls"
      enableAuthentication: false
      certFilename: tls.crt
      certKeyFilename: tls.key
      caFilename: "ca.crt"

  logLevel: "info"
  configuration: ""
  existingConfigmap: ""
  ## @param extraEnvVars [array] Extra environment variables to be set on etcd container
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars
  ##
  extraEnvVarsCM: ""
  ## @param extraEnvVarsSecret Name of existing Secret containing extra env vars
  ##
  extraEnvVarsSecret: ""
  ## @param command [array] Default container command (useful when using custom images)
  ##
  replicaCount: 3

  resourcesPreset: "micro"
  resources: {}

  ## @param customLivenessProbe [object] Override default liveness probe
  ##
  customLivenessProbe: {}
  ## @param customReadinessProbe [object] Override default readiness probe
  ##
  customReadinessProbe: {}
  ## @param customStartupProbe [object] Override default startup probe
  ##
  customStartupProbe: {}

  extraVolumes:
    - name: own-ca-bundle
      configMap:
        name: own-ca-bundle
        defaultMode: 0644
        optional: false
        items:
          - key: own-ca-bundle.pem
            path: ca-certificates.crt

  extraVolumeMounts:
    - mountPath: /etc/ssl/certs/
      name: own-ca-bundle
      readOnly: true

  service:
    type: ClusterIP
    enabled: true
    clusterIP: ""
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
  persistence:
    enabled: true
    storageClass: "nfs-client"
    accessModes:
      - ReadWriteOnce
    size: 8Gi
  
  networkPolicy:
    ## @param networkPolicy.enabled Enable creation of NetworkPolicy resources
    ##
    enabled: false

  metrics:
    ## @param metrics.enabled Expose etcd metrics
    ##
    enabled: true
    podMonitor:
      enabled: false
      namespace: monitoring
      interval: 30s
      scheme: http
      tlsConfig: {}

    prometheusRule:
      enabled: false
      namespace: ""
      additionalLabels: {}
      ## @param metrics.prometheusRule.rules Prometheus Rule definitions
      # - alert: ETCD has no leader
      #   annotations:
      #     summary: "ETCD has no leader"
      #     description: "pod {{`{{`}} $labels.pod {{`}}`}} state error, can't connect leader"
      #   for: 1m
      #   expr: etcd_server_has_leader == 0
      #   labels:
      #     severity: critical
      #     group: PaaS
      ##
      rules: []
  
  startFromSnapshot:
    enabled: false

  disasterRecovery:
    enabled: false

  serviceAccount:
    create: true
    name: ""
    automountServiceAccountToken: false
  
  preUpgradeJob:
    enabled: true

  defrag:
    enabled: false
