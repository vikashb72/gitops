kestra:
  ### This creates a config map of the Kestra configuration
  configuration: {}
  # Example: Setting the plugin defaults for the Docker runner
  #   kestra:
  #     plugins:
  #       configurations:
  #         - type:  io.kestra.plugin.scripts.runner.docker.Docker
  #           values:
  #             volume-enabled: true
  
  
  ### This will create a Kubernetes Secret for the values provided
  ## This will be appended to kestra-secret with the key application-secrets.yml
  secrets: {}
  # Example: Store your postgres backend credentials in a secret
  #   secrets:
  #     kestra:
  #       datasources:
  #         postgres:
  #           username: pguser
  #           password: mypass123
  #           url: jdbc:postgresql://pghost:5432/db
  
  ### Load Kestra configuration from existing secret
  ## Here this assumes the secret is already deployed and the following apply:
  ## 1. The secret type is "Opaque"
  ## 2. The secret has a single key
  ## 3. The value of the secret is the Kestra configuration.
  externalSecret: {}
    #secretName: secret-name
    #key: application-kestra.yml
  
  ### configuration files
  ## This option allows you to reference existing local files to configure Kestra, e.g.
  configurationPath:
  # configurationPath: /app/application.yml,/app/application-secrets.yml
  
  ### Kestra executable
  executable: /app/kestra
  
  
  ### Deployments
  deployments:
    webserver:
      enabled: true
      replicaCount: 1
      autoscaler:
        enabled: false
        minReplicas: 1
        maxReplicas: 3
  
    executor:
      enabled: true
  
    indexer:
      enabled: true
  
    scheduler:
      enabled: true
      kind: Deployment
  
    worker:
      enabled: true
  
    standalone:
      enabled: false
  
  # EE only - Define additional group of workers.
  workerGroup:
    workergroupname: # name of the worker group
      enabled: false
  
  # EE only - the Kestra Kubernetes Operator
  operator:
    enabled: false
    image: registry.kestra.io/docker/kestra-operator
    apiKey: ""
    basicAuth: ""
  
  dind:
    enabled: false
  
  ### Kafka
  kafka:
    enabled: true
    listeners:
      client:
        protocol: PLAINTEXT
      controller:
        protocol: PLAINTEXT
      interbroker:
        protocol: PLAINTEXT
      external:
        protocol: PLAINTEXT
  
  ### ElasticSearch
  elasticsearch:
    enabled: true
    clusterName: "es-kestra"
    createCert: false
    protocol: http
    esConfig:
      elasticsearch.yml: |
        xpack.security.enabled: false
  
  ### Minio
  minio:
    enabled: true
    auth:
      rootUser: please-change-me
      rootPassword: its-not-a-secret
    defaultBuckets: kestra
    resources:
      requests:
        memory: 512Mi
  
  ### Postgresql
  postgresql:
    enabled: true
    auth:
      database: kestra
      username: kestra
      password: kestra
  
    primary:
      persistence:
        enabled: true
        size: 8Gi
  
  ### Service
  service:
    type: ClusterIP
    loadBalancerIP: ""
    management:
      enabled: false
  
  
  ### Ingress
  ingress:
    enabled: false
  
  extraVolumeMounts: []
  
  extraVolumes: []
  
  extraEnv: []
  
  # https://kestra.io/docs/configuration#environment-variables-prefix
  extraConfigMapEnvFrom:
    # - name: my-existing-configmap-no-prefix
    # - name: my-existing-configmap-with-prefix
    #   prefix: KESTRA_
  
  extraSecretEnvFrom:
    # - name: my-existing-no-prefix
    # - name: my-existing-with-prefix
    #   prefix: SECRET_
  
  ### Application Secrets
  ## To pass in secrets of your applications, services etc to Kestra please see the following:
  ## https://kestra.io/docs/how-to-guides/kubernetes-secrets
  
  ### Extra Kubernetes Manifests
  extraManifests: []
    # - apiVersion: v1
    #   kind: Secret
    #   metadata:
    #     name: demo
    #   data:
    #     key: pass123
  
