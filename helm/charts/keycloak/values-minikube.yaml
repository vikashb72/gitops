schema:
  env: minikube

keycloak:
  global:
    defaultStorageClass: "nfs-client"
    storageClass: "nfs-client"

  dnsPolicy: ClusterFirst

  diagnosticMode:
    enabled: false

  image:
    debug: false

  auth:
    adminUser: keycloak-admin
    existingSecret: keycloak-initial-auth
    passwordSecretKey: admin-password

  # customCaExistingSecret

  tls:
    enabled: false
    autoGenerated: false
    existingSecret: "keycloak-tls"
    usePem: true

  adminRealm: "master"

  production: true

  proxyHeaders: ""

  proxy: edge

  httpRelativePath: "/"

  resourcesPreset: "small"

  resources: {}

  service:
    #type: ClusterIP
    type: LoadBalancer
    loadBalancerIP: 192.168.49.247

    annotations: {}

    http:
      enabled: true

    https:
      enabled: true

    ports:
      http: 80
      https: 443

  ingress:
    enabled: false

  adminIngress:
    enabled: false

  networkPolicy:
    enabled: true

  serviceAccount:
    create: true

  rbac:
    create: true

  pdb:
    create: true

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3

  extraStartupArgs: "--features=user-event-metrics --hostname=auth.minikube.home.where-ever.net -Dkeycloak.profile.feature.scripts=enabled --health-enabled=true --metrics-enabled=true --tracing-enabled=true --event-metrics-user-enabled=true "

  metrics:
    enabled: false

    serviceMonitor:
      enabled: false
      namespace: monitoring
      labels:
        release: kube-prometheus-stack
      tlsConfig: {}

    prometheusRule:
      enabled: false
      namespace: monitoring
      groups: []

  keycloakConfigCli:
    enabled: false
    resourcesPreset: "small"
    command: []

  postgresql:
    persistence:
      storageClassName: nfs-client
    image:
      debug: false
    enabled: true
    auth:
      postgresPassword: ""
      username: bn_keycloak
      password: ""
      database: bitnami_keycloak
      existingSecret: "postgresql-credentials"

      secretKeys:
        adminPasswordKey: adminPasswordKey
        postgres-password: adminPasswordKey
        userPasswordKey: userPasswordKey
        password: userPasswordKey

  externalDatabase:
    host: ""
    port: ""
    user: ""
    database: ""
    password: ""
    #existingSecret: keycloak-externaldb
    #existingSecretHostKey: db-host
    #existingSecretPortKey: db-port
    #existingSecretUserKey: db-user
    #existingSecretDatabaseKey: db-database
    #existingSecretPasswordKey: db-password

  cache:
    enabled: false

  logging:
    output: default
    level: INFO
