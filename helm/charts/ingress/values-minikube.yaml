schema:
  env: minikube

certificates:
  - name: httpbin-gateway-tls
    host: httpbin.minikube.where-ever.net
  - name: echoserver-gateway-tls
    host: echoserver.minikube.where-ever.net
  - name: argocd-gateway-tls
    host: argocd.minikube.where-ever.net
    dnsNames:
      - argocd.minikube.where-ever.net
      - argocd-gui.minikube.where-ever.net
  - name: prometheus-gateway-tls
    host: prometheus.minikube.where-ever.net
  - name: authentik-gateway-tls
    host: authentik.minikube.where-ever.net
  - name: grafana-gateway-tls
    host: grafana.minikube.where-ever.net
  - name: alertmanager-gateway-tls
    host: alertmanager.minikube.where-ever.net
  - name: loki-gateway-tls
    host: loki.minikube.where-ever.net
  - name: keycloak-gateway-tls
    host: keycloak.minikube.where-ever.net
  - name: vault-gateway-tls
    host: vault.minikube.where-ever.net
  - name: goldilocks-gateway-tls
    host: goldilocks.minikube.where-ever.net
  - name: mailpit-gateway-tls
    host: mailpit.minikube.where-ever.net
  - name: smtp-gateway-tls
    host: smtp.minikube.where-ever.net
  - name: mailhog-gateway-tls
    host: mailhog.minikube.where-ever.net
  - name: homepage-gateway-tls
    host: homepage.minikube.where-ever.net
  - name: gloo-ui-gateway-tls
    host: gloo-ui.minikube.where-ever.net

gateways:
  app-gateway:
    gateway: istio
    LoadBalancerIP: "192.168.49.251"
    listeners:
      - name: httpbin-https
        hostname: "httpbin.minikube.where-ever.net"
        port: 443
        protocol: HTTPS
        tls:
          mode: Terminate
          certificateRefs:
            - name: httpbin-gateway-tls
        allowedRoutes:
          namespaces:
            from: All
      - name: echoserver-https
        hostname: "echoserver.minikube.where-ever.net"
        port: 443
        protocol: HTTPS
        tls:
          mode: Terminate
          certificateRefs:
            - name: echoserver-gateway-tls
        allowedRoutes:
          namespaces:
            from: All
    httproutes:
      - name: httpbin
        namespace: httpbin
        hostnames: '["httpbin.minikube.where-ever.net"]'
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /get
              - path:
                  type: PathPrefix
                  value: /headers
            filters:
              - type: RequestHeaderModifier
                requestHeaderModifier:
                  add:
                  - name: Added-Header
                    value: added-value
            backendRefs:
              - name: httpbin
                port: 8000
      - name: echoserver
        namespace: echoserver
        hostnames: '["echoserver.minikube.where-ever.net"]'
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: echoserver
                port: 80
  infra-gateway:
    LoadBalancerIP: "192.168.49.252"
    gateway: istio
    listeners:
      - name: argocd-https
        hostname: "argocd.minikube.where-ever.net"
        protocol: HTTPS
        #protocol: TLS
        port: 443
        tls:
          mode: Terminate
          #mode: Passthrough
          certificateRefs:
            - kind: Secret
              name: argocd-gateway-tls
          #options:
          #  gateway.istio.io/tls-terminate-mode: MUTUAL
        allowedRoutes:
          namespaces:
            from: All
      - name: prometheus-https
        hostname: "prometheus.minikube.where-ever.net"
        protocol: HTTPS
        port: 443
        tls:
          mode: Terminate
          certificateRefs:
            - kind: Secret
              name: prometheus-gateway-tls
        allowedRoutes:
          namespaces:
            from: All
      - name: authentik-https
        hostname: "authentik.minikube.where-ever.net"
        protocol: HTTPS
        port: 443
        tls:
          mode: Terminate
          certificateRefs:
            - kind: Secret
              name: authentik-gateway-tls
        allowedRoutes:
          namespaces:
            from: All
      - name: grafana-https
        hostname: "grafana.minikube.where-ever.net"
        protocol: HTTPS
        port: 443
        tls:
          mode: Terminate
          certificateRefs:
            - kind: Secret
              name: grafana-gateway-tls
        allowedRoutes:
          namespaces:
            from: All
      - name: alertmanager-https
        hostname: "alertmanager.minikube.where-ever.net"
        protocol: HTTPS
        port: 443
        tls:
          mode: Terminate
          certificateRefs:
            - kind: Secret
              name: alertmanager-gateway-tls
        allowedRoutes:
          namespaces:
            from: All
      - name: loki-https
        hostname: "loki.minikube.where-ever.net"
        protocol: HTTPS
        port: 443
        tls:
          mode: Terminate
          certificateRefs:
            - kind: Secret
              name: loki-gateway-tls
        allowedRoutes:
          namespaces:
            from: All
      #- name: gloo-ui-https
      #  hostname: "gloo-ui.minikube.where-ever.net"
      #  protocol: HTTPS
      #  port: 443
      #  tls:
      #    mode: Terminate
      #    certificateRefs:
      #      - kind: Secret
      #        name: gloo-ui-gateway-tls
      #  allowedRoutes:
      #    namespaces:
      #      from: All
      #- name: keycloak-https
      #  hostname: "keycloak.minikube.where-ever.net"
      #  protocol: HTTPS
      #  port: 443
      #  tls:
      #    mode: Terminate
      #    certificateRefs:
      #      - kind: Secret
      #        name: keycloak-gateway-tls
      #  allowedRoutes:
      #    namespaces:
      #      from: All
      - name: vault-https
        hostname: "vault.minikube.where-ever.net"
        protocol: HTTPS
        port: 443
        tls:
          mode: Terminate
          certificateRefs:
            - kind: Secret
              name: vault-gateway-tls
        allowedRoutes:
          namespaces:
            from: All
      - name: goldilocks-https
        hostname: "goldilocks.minikube.where-ever.net"
        protocol: HTTPS
        port: 443
        tls:
          mode: Terminate
          certificateRefs:
            - kind: Secret
              name: goldilocks-gateway-tls
        allowedRoutes:
          namespaces:
            from: All
      #- name: mailpit-https
      #  hostname: "mailpit.minikube.where-ever.net"
      #  protocol: HTTPS
      #  port: 443
      #  tls:
      #    mode: Terminate
      #    certificateRefs:
      #      - kind: Secret
      #        name: mailpit-gateway-tls
      #  allowedRoutes:
      #    namespaces:
      #      from: All
      #- name: smtp-https
      #  hostname: "smtp.minikube.where-ever.net"
      #  protocol: HTTPS
      #  port: 443
      #  tls:
      #    mode: Terminate
      #    certificateRefs:
      #      - kind: Secret
      #        name: smtp-gateway-tls
      #  allowedRoutes:
      #    namespaces:
      #      from: All
      - name: mailhog-https
        hostname: "mailhog.minikube.where-ever.net"
        protocol: HTTPS
        port: 443
        tls:
          mode: Terminate
          certificateRefs:
            - kind: Secret
              name: mailhog-gateway-tls
        allowedRoutes:
          namespaces:
            from: All
      - name: mailhog-smtp
        hostname: "mailhog.minikube.where-ever.net"
        protocol: HTTP
        port: 25
        allowedRoutes:
          namespaces:
            from: All
      - name: homepage-https
        hostname: "homepage.minikube.where-ever.net"
        protocol: HTTPS
        port: 443
        tls:
          mode: Terminate
          certificateRefs:
            - kind: Secret
              name: homepage-gateway-tls
        allowedRoutes:
          namespaces:
            from: All
    httproutes:
      - name: argocd-https
        namespace: argocd
        hostnames: '["argocd.minikube.where-ever.net"]'
        rules:
          - backendRefs:
              - name: argocd-server
                port: 80
                #group: ''
                #kind: Service
                #weight: 1
            matches:
              - path:
                  type: PathPrefix
                  value: /
      - name: prometheus-https
        namespace: monitoring
        hostnames: '["prometheus.minikube.where-ever.net"]'
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: kube-prometheus-stack-prometheus
                port: 9090
      - name: authentik-https
        namespace: authentik
        hostnames: '["authentik.minikube.where-ever.net"]'
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: authentik-server
                port: 80
      - name: grafana-https
        namespace: monitoring
        hostnames: '["grafana.minikube.where-ever.net"]'
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: kube-prometheus-stack-grafana
                port: 80
      - name: alertmanager-https
        namespace: monitoring
        hostnames: '["alertmanager.minikube.where-ever.net"]'
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: alertmanager-operated
                port: 9093
      - name: loki-https
        namespace: monitoring
        hostnames: '["loki.minikube.where-ever.net"]'
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: loki-gateway
                port: 80
      #- name: gloo-ui-https
      #  namespace: gloo-system
      #  hostnames: '["gloo-ui.minikube.where-ever.net"]'
      #  rules:
      #    - matches:
      #        - path:
      #            type: PathPrefix
      #            value: /
      #      backendRefs:
      #        - name: gloo-ui
      #          port: 80
      #- name: keycloak-https
      #  namespace: keycloak
      #  hostnames: '["keycloak.minikube.where-ever.net"]'
      #  rules:
      #    - matches:
      #        - path:
      #            type: PathPrefix
      #            value: /
      #      backendRefs:
      #        - name: keycloak
      #          port: 80
      - name: vault-https
        namespace: vault-system
        hostnames: '["vault.minikube.where-ever.net"]'
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: vault-ui
                port: 8200
      - name: goldilocks-https
        namespace: goldilocks-system
        hostnames: '["goldilocks.minikube.where-ever.net"]'
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: goldilocks-dashboard
                port: 80
      #- name: mailpit-https
      #  namespace: dev-tools
      #  hostnames: '["mailpit.minikube.where-ever.net"]'
      #  rules:
      #    - matches:
      #        - path:
      #            type: PathPrefix
      #            value: /
      #      backendRefs:
      #        - name: mailpit
      #          port: 80
      #- name: mailpit-smtp
      #  namespace: dev-tools
      #  hostnames: '["smtp.minikube.where-ever.net"]'
      #  rules:
      #    - matches:
      #        - path:
      #            type: PathPrefix
      #            value: /
      #      backendRefs:
      #        - name: smtp-prometheus-stack-prometheus
      #          port: 25
      - name: mailhog-https
        namespace: monitoring
        hostnames: '["mailhog.minikube.where-ever.net"]'
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: mailhog
                port: 8025
      - name: mailhog-smtp
        namespace: dev-tools
        hostnames: '["mailhog.minikube.where-ever.net"]'
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: mailhog
                port: 1025
      - name: homepage-https
        namespace: homepage
        hostnames: '["homepage.minikube.where-ever.net"]'
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: homepage
                port: 3000
