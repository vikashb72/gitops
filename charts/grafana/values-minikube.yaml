#grafana:
#  testFramework:
#    enabled: false
#  service:
#    enabled: true
#    type: LoadBalancer
#    loadBalancerIP: 192.168.49.231

grafana:
  namespaceScope: false
  isOpenShift: false
  logging:
    encoder: console
    level: info
    time: rfc3339
  # -- Additional environment variables
  env: []
    # -- grafana image, e.g. docker.io/grafana/grafana:9.1.6, overwrites the default grafana image defined in the operator
    # - name: RELATED_IMAGE_GRAFANA
    #   value: "docker.io/grafana/grafana:9.1.6"
    # - name: MY_VAR
    #   value: "myvalue"
  serviceAccount:
    create: true
  rbac:
    create: true
  metricsService:
    type: LoadBalancer
    loadBalancerIP: 192.168.49.231
    metricsPort: 9090
    pprofPort: 8888
  serviceMonitor:
    # -- Whether to create a ServiceMonitor
    enabled: false
  extraObjects: []
  # - apiVersion: external-secrets.io/v1beta1
  #   kind: ExternalSecret
  #   metadata:
  #     name: grafana-operator-apikey
  #   spec:
  #     refreshInterval: 1h
  #     secretStoreRef:
  #       kind: SecretStore
  #       name: my-secret-store
  #     target:
  #       template:
  #         data:
  #           GRAFANA_CLOUD_INSTANCE_TOKEN: "{{`{{ .Token }}`}}"
  #     dataFrom:
  #     - extract:
  #         key: my-secret-store-secret

#grafana:
#  operator:
#    enabled: true
#    namespace: grafana
#    serviceAccount:
#      create: true
#      name: grafana-operator
#  grafana:
#    enabled: true
#    namespace: grafana
#    adminUser: admin
#    ingress:
#      enabled: false
#    service:
#      type: LoadBalancer
#      loadBalancerIP: 192.168.49.231
#      port: 80
#      targetPort: 3000
#    persistence:
#      type: pvc
#      enabled: true
#      storageClassName: nfs-client
#      accessModes:
#        - ReadWriteOnce
#      size: 5Gi
#      finalizers:
#        - kubernetes.io/pvc-protection
#    extraPvcLabels: {}
#    extraVolumes:  []
#      #- name: grafana-datasources
#      #  configMap:
#      #      defaultMode: 420
#      #      name: grafana-datasources
#      #- name: grafana-data-pv
#      #  persistentVolumeClaim:
#      #    claimName: grafana-data-pvc
#      #- name: grafana-datasources-pv
#      #  persistentVolumeClaim:
#      #    claimName: grafana-datasources-pvc
#    extraVolumeMounts: []
#      #- mountPath: /var/lib/grafana
#      #  name: grafana-data-pv
#      #- mountPath: /etc/grafana/provisioning/datasources
#      #  name: grafana-pvc-datasources
#      #  readonly: false
