promtail:
  daemonset:
    enabled: true
    autoscaling:
      enabled: true
      controlledResources: []
      minAllowed: {}
      minReplicas: 1
      updateMode: Auto
  deployment:
    enabled: true
    replicaCount: 1
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage:
      strategy:
        type: RollingUpdate
  service:
    enabled: true
    labels: {}
    annotations: {}
  configmap:
    enabled: true
  readinessProbe:
    failureThreshold: 5
    httpGet:
      path: "{{ printf `%s/ready` .Values.httpPathPrefix }}"
      port: http-metrics
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 10
  serviceAccount:
    create: true
    name: null
    imagePullSecrets: []
    annotations: {}
  podSecurityPolicy:
    privileged: true
    allowPrivilegeEscalation: true
    volumes:
      - "secret"
      - "hostPath"
      - "downwardAPI"
    hostNetwork: false
    hostIPC: false
    hostPID: false
    runAsUser:
      rule: "RunAsAny"
    seLinux:
      rule: "RunAsAny"
    supplementalGroups:
      rule: "RunAsAny"
    fsGroup:
      rule: "RunAsAny"
    readOnlyRootFilesystem: true
    requiredDropCapabilities:
      - ALL
  config:
    enabled: true
    logLevel: info
    logFormat: logfmt
    serverPort: 3101
    clients:
      - url: http://loki-distributed-gateway.grafana.svc.cluster.local/loki/api/v1/push
    positions:
      filename: /run/promtail/positions.yaml
    enableTracing: false
    snippets:
      pipelineStages:
        - cri: {}
      common:
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_node_name
          target_label: node_name
        - action: replace
          source_labels:
            - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          replacement: $1
          separator: /
          source_labels:
            - namespace
            - app
          target_label: job
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_container_name
          target_label: container
        - action: replace
          replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
          target_label: __path__
        - action: replace
          replacement: /var/log/pods/*$1/*.log
          regex: true/(.*)
          separator: /
          source_labels:
            - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
            - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
            - __meta_kubernetes_pod_container_name
          target_label: __path__
      addScrapeJobLabel: false
      extraLimitsConfig: ""
      extraServerConfigs: ""
      extraScrapeConfigs: ""
      extraRelabelConfigs: []
      scrapeConfigs: |
        # See also https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet for reference
        - job_name: kubernetes-pods
          pipeline_stages:
            {{- toYaml .Values.config.snippets.pipelineStages | nindent 4 }}
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels:
                - __meta_kubernetes_pod_controller_name
              regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
              action: replace
              target_label: __tmp_controller_name
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_name
                - __meta_kubernetes_pod_label_app
                - __tmp_controller_name
                - __meta_kubernetes_pod_name
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: app
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                - __meta_kubernetes_pod_label_instance
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: instance
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_component
                - __meta_kubernetes_pod_label_component
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: component
            {{- if .Values.config.snippets.addScrapeJobLabel }}
            - replacement: kubernetes-pods
              target_label: scrape_job
            {{- end }}
            {{- toYaml .Values.config.snippets.common | nindent 4 }}
            {{- with .Values.config.snippets.extraRelabelConfigs }}
            {{- toYaml . | nindent 4 }}
            {{- end }}
    file: |
      server:
        log_level: {{ .Values.config.logLevel }}
        log_format: {{ .Values.config.logFormat }}
        http_listen_port: {{ .Values.config.serverPort }}
        {{- with .Values.httpPathPrefix }}
        http_path_prefix: {{ . }}
        {{- end }}
        {{- tpl .Values.config.snippets.extraServerConfigs . | nindent 2 }}
  
      clients:
        {{- tpl (toYaml .Values.config.clients) . | nindent 2 }}
  
      positions:
        {{- tpl (toYaml .Values.config.positions) . | nindent 2 }}
  
      scrape_configs:
        {{- tpl .Values.config.snippets.scrapeConfigs . | nindent 2 }}
        {{- tpl .Values.config.snippets.extraScrapeConfigs . | nindent 2 }}
  
      limits_config:
        {{- tpl .Values.config.snippets.extraLimitsConfig . | nindent 2 }}
  
      tracing:
        enabled: {{ .Values.config.enableTracing }}
