env:
  EVT: minikube

kube-prometheus-stack:
  global:
      createAggregateClusterRoles: true
      pspEnabled: false
  alertmanager:
    enabled: true
    ingress:
      enabled: false
    service:
      loadBalancerIP: ""
      type: ClusterIP
    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi
      volumes: []
      volumeMounts: []
      initContainers: []
  grafana:
    enabled: true
    smtp:
      enabled: true
      existingSecret: "smtp-config"
      passwordKey: "GF_SMTP_PASSWORD"
      userKey: "GF_SMTP_USER"
    grafana.ini:
      smtp:
        enabled: true
        host: desktop.home.where-ever.za.net:587
        startTLS_policy: "MandatoryStartTLS"
        from_address: monitor@minikube.where-ever.net
        skip_verify: true # for minikube
    notifiers:
      notifiers.yaml:
        notifiers:
          - name: email-notifier
            type: email
            uid: email1
            org_id: 1
            is_default: true
            settings:
              addresses: vikashb@home.where-ever.za.net
    alerting:
      policies.yaml:
        apiVersion: 1
        policies:
            - orgId: 1
              receiver: default-notification-email
              group_by:
                - grafana_folder
                - alertname
      contactpoints.yaml:
        secret:
          apiVersion: 1
          contactPoints:
            - orgId: 1
              name: default-notification-email
              receivers:
                - uid: default-notification-email
                  type: email
                  settings:
                    addresses: vikashb@home.where-ever.za.net
                    singleEmail: false
                  disableResolveMessage: false
            #- orgId: 1
            #  name: ms-teams-channel
            #  receivers:
            #    - uid: ms-teams-channel
            #      type: teams
            #      settings:
            #        url: https://localhost/
            #      disableResolveMessage: false
          deleteContactPoints:
            - orgId: 1
              uid: ""
    #admin:
    #  ## Name of the secret. Can be templated.
    #  existingSecret: "grafana-admin-credentials"
    #  userKey: GF_SECURITY_ADMIN_USER
    #  passwordKey: GF_SECURITY_ADMIN_PASSWORD
    initChownData:
      enabled: false
    serviceMonitor:
      enabled: true
      targetLabels:
        - prometheus
    defaultDashboardsEditable: true
    rbac:
      pspEnabled: false
    ingress:
      enabled: false
    persistence:
      enabled: true
      type: pvc
      storageClassName: nfs-client
      accessModes:
        - ReadWriteOnce
      size: 10Gi
      finalizers:
        - kubernetes.io/pvc-protection
      inMemory:
        enabled: false
      lookupVolumeName: true
    serviceAccount:
      create: true
      autoMount: true
    sidecar:
      dashboards:
        enabled: true
        label: grafana_dashboard
        labelValue: "1"
      datasources:
        enabled: true
        defaultDatasourceEnabled: true
        isDefaultDatasource: true
        name: Prometheus
        uid: prometheus
        ## URL of prometheus datasource
        # url: http://prometheus-stack-prometheus:9090/
        alertmanager:
          enabled: true
          name: Alertmanager
          uid: alertmanager
    extraConfigmapMounts: []
    # - name: certs-configmap
    #   mountPath: /etc/grafana/ssl/
    #   configMap: certs-configmap
    #   readOnly: true
    deleteDatasources: []
    # - name: example-datasource
    #   orgId: 1
    additionalDataSources: []
    prune: true
    serviceMonitor:
      enabled: true
    service:
      enabled: true
      type: LoadBalancer
      loadBalancerIP: 192.168.49.231
    plugins:
      - grafana-piechart-panel
      - macropower-analytics-panel
      - azure-monitor-app
      - digrich-bubblechart-panel
      - golioth-websocket-datasource
      - snuids-trend-panel
      - serrrios-statusoverview-panel
      - innius-grpc-datasource
      - novatec-sdg-panel
      - integrationmatters-comparison-panel
      ## You can also use other plugin download URL, as long as they are valid zip files,
      ## and specify the name of the plugin after the semicolon. Like this:
      # - https://grafana.com/api/plugins/marcusolsson-json-datasource/versions/1.3.2/download;marcusolsson-json-datasource
    #dashboards:
    #  default:
    #    # https://grafana.com/grafana/dashboards/2-prometheus-stats/
    #    prometheus-stats:
    #      gnetId: 2
    #      revision: 2
    #      datasource: Prometheus
    #    # https://grafana.com/grafana/dashboards/11835-redis-dashboard-for-prometheus-redis-exporter-helm-stable-redis-ha/
    #    redis-exporter:
    #      gnetId: 11835
    #      revision: 1
    #      datasource: Prometheus
    #    # https://grafana.com/grafana/dashboards/14699-kubernetes-status/
    #    kubernetes-status:
    #      gnetId: 14699
    #      revision: 2
    #      datasource: Prometheus
    #    #
    #    # TO TEST
    #    #
    #    # https://grafana.com/grafana/dashboards/14584-argocd/
    #    argocd:
    #      gnetId: 14584
    #      revision: 1
    #      datasource: Prometheus
    #    ## https://grafana.com/grafana/dashboards/11001-cert-manager/
    #    #cert-manager:
    #    #  gnetId: 11001
    #    #  revision: 1
    #    #  datasource: Prometheus
    #    ##keycloak-metrics:
    #    ##  gnetId: 10441
    #    ##  revision: 2
    #    ##  datasource: Prometheus
    #    ## https://grafana.com/grafana/dashboards/7645-istio-control-plane-dashboard/
    #    ##itio-control-plane:
    #    ##  gnetId: 7645
    #    ##  revision: 240
    #    ##  datasource: Prometheus
    #    ## https://grafana.com/grafana/dashboards/1860-node-exporter-full/
    # I have no idea why this breaks
    #envValueFrom:
    #  GF_SMTP_ENABLED:
    #    name: grafana-smtp-config
    #    key: GF_SMTP_ENABLED
    #  GF_SMTP_HOST:
    #    name: grafana-smtp-config
    #    key: GF_SMTP_HOST
    #  GF_SMTP_USER:
    #    name: grafana-smtp-config
    #    key: GF_SMTP_USER
    #  GF_SMTP_PASSWORD:
    #    name: grafana-smtp-config
    #    key: GF_SMTP_PASSWORD
    #  GF_SMTP_FROM_ADDRESS:
    #    name: grafana-smtp-config
    #    key: GF_SMTP_FROM_ADDRESS
    #  GF_SMTP_STARTTLS_POLICY:
    #    name: grafana-smtp-config
    #    key: GF_SMTP_STARTTLS_POLICY
  prometheusOperator:
    service:
      loadBalancerIP: ""
      type: ClusterIP
  prometheus:
    enabled: true
    agentMode: false
    service:
      type: LoadBalancer
      loadBalancerIP: 192.168.49.227
    ingress:
      enabled: false
    prometheusSpec:
      #ruleNamespaceSelector: {}
      #ruleSelectorNilUsesHelmValues: true 
      #serviceMonitorSelectorNilUsesHelmValues: true
      serviceMonitorSelectorNilUsesHelmValues: false
      # ruleNamespaceSelector:
      #   matchLabels:
      #     prometheus: somelabel
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi
      volumes: []
      volumeMounts: []
      additionalScrapeConfigs: []
      # - job_name: kube-etcd
      #   kubernetes_sd_configs:
      #     - role: node
      #   scheme: https
      #   tls_config:
      #     ca_file:   /etc/prometheus/secrets/etcd-client-cert/etcd-ca
      #     cert_file: /etc/prometheus/secrets/etcd-client-cert/etcd-client
      #     key_file:  /etc/prometheus/secrets/etcd-client-cert/etcd-client-key
      #   relabel_configs:
      #   - action: labelmap
      #     regex: __meta_kubernetes_node_label_(.+)
      #   - source_labels: [__address__]
      #     action: replace
      #     targetLabel: __address__
      #     regex: ([^:;]+):(\d+)
      #     replacement: ${1}:2379
      #   - source_labels: [__meta_kubernetes_node_name]
      #     action: keep
      #     regex: .*mst.*
      #   - source_labels: [__meta_kubernetes_node_name]
      #     action: replace
      #     targetLabel: node
      #     regex: (.*)
      #     replacement: ${1}
      #   metric_relabel_configs:
      #   - regex: (kubernetes_io_hostname|failure_domain_beta_kubernetes_io_region|beta_kubernetes_io_os|beta_kubernetes_io_arch|beta_kubernetes_io_instance_type|failure_domain_beta_kubernetes_io_zone)
      #     action: labeldrop
      #
      ## If scrape config contains a repetitive section, you may want to use a template.
      ## In the following example, you can see how to define `gce_sd_configs` for multiple zones
      # additionalScrapeConfigs: |
      #  - job_name: "node-exporter"
      #    gce_sd_configs:
      #    {{range $zone := .Values.gcp_zones}}
      #    - project: "project1"
      #      zone: "{{$zone}}"
      #      port: 9100
      #    {{end}}
      #    relabel_configs:
      #    ...
      additionalAlertManagerConfigs: []
      # - consul_sd_configs:
      #   - server: consul.dev.test:8500
      #     scheme: http
      #     datacenter: dev
      #     tag_separator: ','
      #     services:
      #       - metrics-prometheus-alertmanager
    additionalServiceMonitors: []
    additionalPodMonitors: []
  cleanPrometheusOperatorObjectNames: false
  extraManifests: []
    # - apiVersion: v1
    #   kind: ConfigMap
    #   metadata:
    #   labels:
    #     name: prometheus-extra
    #   data:
    #     extra-data: "value"

#20250220#prometheus:
#20250220#  rbac:
#20250220#    create: true
#20250220#  serviceAccounts:
#20250220#    server:
#20250220#      create: true
#20250220#  server:
#20250220#    name: server
#20250220#    enableServiceLinks: true
#20250220#    extraFlags:
#20250220#      - web.enable-lifecycle
#20250220#    global:
#20250220#      scrape_interval: 1m
#20250220#      scrape_timeout: 10s
#20250220#      evaluation_interval: 1m
#20250220#    persistentVolume:
#20250220#      enabled: true
#20250220#      accessModes:
#20250220#        - ReadWriteOnce
#20250220#      mountPath: /data
#20250220#      size: 5Gi
#20250220#      storageClass: nfs-client
#20250220#    service:
#20250220#      enabled: true
#20250220#      type: LoadBalancer
#20250220#      loadBalancerIP: 192.168.49.227
#20250220#  prometheus-pushgateway:
#20250220#    enable: true
#20250220#
#20250220#  extraScrapeConfigs: ""
#20250220#    # - job_name: 'prometheus-blackbox-exporter'
#20250220#    #   metrics_path: /probe
#20250220#    #   params:
#20250220#    #     module: [http_2xx]
#20250220#    #   static_configs:
#20250220#    #     - targets:
#20250220#    #       - https://example.com
#20250220#    #   relabel_configs:
#20250220#    #     - source_labels: [__address__]
#20250220#    #       target_label: __param_target
#20250220#    #     - source_labels: [__param_target]
#20250220#    #       target_label: instance
#20250220#    #     - target_label: __address__
#20250220#    #       replacement: prometheus-blackbox-exporter:9115
#20250220
